---
import '../styles/global.css'
import Navigation from '../components/ui/Navigation.astro'
import Footer from '../components/ui/Footer.astro'

export interface Props {
  title: string
  description?: string
  socialImage?: string
}

const { title, description, socialImage } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const socialImageURL = new URL(socialImage || '/images/default_og-image.png', canonicalURL)
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- SEO -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <link rel="canonical" href={canonicalURL} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Facebook -->
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:domain" content={canonicalURL.host} />
    <meta name="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={socialImageURL} />

    <!-- Preload fonts -->
    <link
      rel="preload"
      href="/fonts/Alegreya-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/Alegreya-Italic.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/AlegreyaSans-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/AlegreyaSans-Bold.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/AlegreyaSans-Italic.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/AlegreyaSans-BoldItalic.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />

    <!-- Favicon  -->
    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="Power Passenger Passage" />
    <link rel="manifest" href="/site.webmanifest" />

    <!-- TODO: add analytics -->
  </head>

  <body>
    <Navigation />
    <slot />
    <Footer />
  </body>
</html>

<script is:inline data-astro-rerun>
  /**
   * Animate sections with the class `lsa` when they come into view
   */
  function handleAnimations() {
    if (!window.IntersectionObserver) {
      return console.log('IntersectionObserver not supported')
    }

    // Grab all sections to be animated
    const sections = document.querySelectorAll('.lsa')

    // Configure observer options
    if (sections.length !== 0) {
      const options = {
        root: null,
        rootMargin: '0px',
        threshold: 0.25,
      }

      // Initialize observer
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          const section = entry.target

          // By default, animations repeat on scroll unless the section has the class `no-repeat`
          if (entry.isIntersecting) {
            section.classList.add('active')
          } else if (!entry.isIntersecting && !section.classList.contains('no-repeat')) {
            section.classList.remove('active')
          }
        })
      }, options)

      // Observe each section with the class `lsa`
      sections.forEach((section) => observer.observe(section))
    }
  }

  // Handle animations on page load
  document.addEventListener('DOMContentLoaded', () => {
    handleAnimations()

    // Handle animations on scroll
    document.addEventListener('scroll', handleAnimations)
  })
</script>
