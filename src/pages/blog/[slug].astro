---
import type { SanityDocument } from '@sanity/client'
import { Icon } from 'astro-icon/components'
import CTA from '../../components/text/CTA.astro'
import DateAndReadTime from '../../components/text/DateAndReadTime.astro'
import PortableText from '../../components/text/PortableText.astro'
import RecentPosts from '../../components/ui/RecentPosts.astro'
import SanityImage from '../../components/ui/SanityImage.astro'
import Layout from '../../layouts/Layout.astro'
import { loadQuery } from '../../sanity/lib/load-query'
import { urlForImage } from '../../sanity/lib/urlForImage'

export async function getStaticPaths() {
  const { data: allPosts } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "post"] | order(publishedAt asc)`,
  })

  return allPosts.map((post) => {
    return {
      params: {
        slug: post.slug.current,
      },
      props: {
        allPosts,
      },
    }
  })
}

// Get page data and props
const { params, props } = Astro

// Load the current post
const { data: currentPost } = await loadQuery<SanityDocument>({
  query: `*[_type == "post" && slug.current == $slug][0] {
    _id,
    title,
    slug,
    publishedAt,
    description,
    mainImage,
    body,
    "estimatedReadingTime": round(length(pt::text(body)) / 5 / 180 )
  }`,
  params,
})

// Calculate recent posts by filtering out the current post
const { data: recentPosts } = await loadQuery<SanityDocument[]>({
  query: `*[_type == "post" && slug.current != $slug] | order(publishedAt desc) [0...3] {
    _id,
    title,
    slug,
    publishedAt,
    description,
    mainImage,
    body,
    "estimatedReadingTime": round(length(pt::text(body)) / 5 / 180 )
  }`,
  params,
})

// Pagination: previous and next post
const currentPostIndex = props.allPosts.findIndex((p) => p.slug.current === params.slug)
const previousPost = props.allPosts[currentPostIndex - 1] || null
const nextPost = props.allPosts[currentPostIndex + 1] || null

// Generate social image for SEO
const socialImage = urlForImage(currentPost.mainImage).url()
---

<Layout title={currentPost.title} description={currentPost.description} socialImage={socialImage}>
  <header class="bg-gradient-to-b from-tan-100 to-white px-0 pb-12">
    <div
      class="container-sm h-full pt-[calc(var(--nav-height)+4rem)] px-(--site-padding) flex flex-col items-center md:justify-center gap-8 text-center"
    >
      <Icon name="zig-zag" class="w-16 lsa no-repeat" />
      <h1 class="lsa lsa-slide-up no-repeat" set:html={currentPost.title} />
      <DateAndReadTime
        publishedAt={currentPost.publishedAt}
        estimatedReadingTime={currentPost.estimatedReadingTime}
        class="lsa lsa-slide-up no-repeat delay-100"
      />
      <div class="w-full lsa lsa-slide-up no-repeat delay-200">
        <SanityImage image={currentPost.mainImage} alt={currentPost.mainImage.alt} />
      </div>
    </div>
  </header>

  <main id="blog-layout" class="bg-gradient-to-b from-white to-tan-100">
    <section id="post" class="container-sm flex flex-col gap-[1lh] py-0">
      <PortableText portableText={currentPost.body} />

      <!-- Pagination -->
      <div class="flex flex-wrap gap-8 justify-between mt-[1lh]">
        {
          previousPost && (
            <CTA
              type="link-2"
              text="Previous Post"
              href={previousPost.slug.current}
              class="mr-auto"
            />
          )
        }

        {
          nextPost && (
            <CTA type="link-2" text="Next Post" href={nextPost.slug.current} class="ml-auto" />
          )
        }
      </div>
    </section>

    <section id="recent-posts" class="container-md">
      <RecentPosts title="Recent Posts" posts={recentPosts} />
    </section>
  </main>
</Layout>
